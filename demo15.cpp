// C++ 数组1
/*
存储一个固定大小的相同类型元素的顺序集合。数组是用来存储一系列数据，但它往往被认为是一系列相同类型的变量。
*/

// 声明数组
/*
在 C++ 中要声明一个数组，需要指定元素的类型和元素的数量
数据类型 数组名[大于0的整数常量]    如: double balance[10];
*/

// 初始化数组
/*
double balance[5] = {1000.0, 2.0, 3.4, 7.0, 50.0};
注: 大括号 { } 中的元素数目不能大于在数组声明时方括号 [ ] 中指定的元素数目
如果省略掉了数组的大小，数组的大小则为初始化时元素的个数，如: double balance[] = {1000.0, 2.0, 3.4, 7.0, 50.0};

注：所有的数组都是以 0 作为它们第一个元素的索引，也被称为基索引，数组的最后一个索引是数组的总元素个数减去 1
为数组中某个元素赋值：balance[4] = 50.0;
*/

// 访问数组元素
/*
数组元素可以通过数组名称加索引进行访问。元素的索引是放在方括号内，跟在数组名称的后边,如: double salary = balance[9];
*/
# include <iostream>
# include <iomanip>

using namespace std;

int main()
{
	int name[10];

	for (int i=0; i < 10; i++)
	{
		name[i] = i + 100;
	}

	cout << "Element" << setw(13) << "Value" << endl;

	for (int j=0; j < 10; j++)
	{
		cout << setw(7) << j << setw(13) << name[j] << endl;
	}
	return 0;
}